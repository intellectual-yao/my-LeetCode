// Source : https://leetcode-cn.com/problems/longest-palindrome/
// Author : GuoQiang Yao
// Date : 2021-11-13

简单题重拳出击
/**************************************************************************************
给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。在构造过程中，请注意区分大小写。比如 “Aa” 不能当做一个回文字符串。

注意:
假设字符串的长度不会超过 1010。

示例 1:

输入:
“abccccdd”

输出:
7

解释:
我们可以构造的最长的回文串是"dccaccd", 它的长度是 7。

**************************************************************************************/

/*******************************************************************************************************
题目分析： 思路在代码中，如果各位不想在if条件中写两个判断的话，应该首先判断值是不是15的倍数，再判断是不是3 以及5 的倍数，因为15的倍数一定也是3或者5的倍数。
********************************************************************************************************/

class Solution {
public:
    vector<string> fizzBuzz(int n) {
        vector<string> s = {"Fizz", "Buzz", "FizzBuzz"};
        vector<string> temp, res;
        for(int i = 1;i < n + 1;++i)
        {
            //如果是3的倍数（隐含不是5的倍数）
            if(i % 3 == 0 && i % 5 != 0)
                res.push_back(s[0]);
            //如果是5的倍数（隐含不是3的倍数）
            else if(i % 3 != 0 && i % 5 == 0)
                res.push_back(s[1]);
            //如果即是3的倍数也是5的倍数
            else if(i % 3 == 0&&i % 5 == 0)
                res.push_back(s[2]);
            //如果两者都不是的话
            else
                res.push_back(to_string(i));
        }
        return res;
    }
};
