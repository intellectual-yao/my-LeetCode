// Source : https://leetcode-cn.com/problems/di-string-match/
// Author : GuoQiang Yao
// Date : 2022-1-14

/**************************************************************************************
给定只含 “I”（增大）或 “D”（减小）的字符串 S ，令 N = S.length。

返回 [0, 1, …, N] 的任意排列 A 使得对于所有 i = 0, …, N-1，都有：

如果 S[i] == “I”，那么 A[i] < A[i+1]
如果 S[i] == “D”，那么 A[i] > A[i+1]

示例 1：

输入：“IDID”
输出：[0,4,1,3,2]
示例 2：

输入：“III”
输出：[0,1,2,3]
示例 3：

输入：“DDI”
输出：[3,2,0,1]

提示：

1 <= S.length <= 10000
S 只包含字符 “I” 或 “D”。

**************************************************************************************/

/*******************************************************************************************************
题目分析：观察题目，题目需要序列从0开始到N结束，因此我们需要双指针分别指向左右端点，
然后按照题目要求一次将对应大小的下标放入结果数组即可。需要注意的是最后需要对最后一个加入结果数组的元素单独处理一下。
********************************************************************************************************/

class Solution {
public:
    vector<int> diStringMatch(string s) {
        int N = s.size();
        //先定义最终序列的两个端口
        int left = 0, right = N;
        vector<int>ans;
        for(int i = 0; i < N; i++)
        {
            //按照题目要求放入对应的数字
            if(s[i] == 'I') 
            {
                ans.emplace_back(left);
                left++;
            }
            else
            {
                ans.emplace_back(right);
                right--;
            } 
        }
        //最后还要再放入一个元素，此时left和right都可以被放入
        ans.emplace_back(right);   
        return ans;
    }
};
