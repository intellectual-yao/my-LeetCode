// Source : https://leetcode-cn.com/problems/longest-uncommon-subsequence-i/
// Date : 2021-11-22
又是简单题重拳出击的一天
/**************************************************************************************
给你两个字符串，请你从这两个字符串中找出最长的特殊序列。「最长特殊序列」定义如下：
该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）。子序列 可以通过删去字符串中的某些字符实现，
但不能改变剩余字符的相对顺序。空序列为所有字符串的子序列，任何字符串为其自身的子序列。输入为两个字符串，
输出最长特殊序列的长度。如果不存在，则返回 -1。

示例 1：

输入: “aba”, “cdc”
输出: 3
解释: 最长特殊序列可为 “aba” (或 “cdc”)，两者均为自身的子序列且不是对方的子序列。
示例 2：

输入：a = “aaa”, b = “bbb”
输出：3
示例 3：

输入：a = “aaa”, b = “aaa”
输出：-1

提示：

两个字符串长度均处于区间 [1 - 100] 。
字符串中的字符仅含有 ‘a’~‘z’ 。
**************************************************************************************/

/*******************************************************************************************************
题目分析：本题较简单，分析直接看代码即可，代码看不懂的话，基本可以告别C++了
********************************************************************************************************/

class Solution {
public:
    int findLUSlength(string a, string b) {
        //若两个字符串一样，则返回-1
        if (a == b)
            return -1;
        //若两个字符串长度一样，则必不可能有子序列这一说
        else if (a.size() == b.size())
            return a.size();
        //此时两个字符串不相等并且长度也不相等
        //则返回二者之中最长的序列即可
        else
            return max(a.size(), b.size());
    }
};
