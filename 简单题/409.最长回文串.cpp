// Source : https://leetcode-cn.com/problems/longest-palindrome/
// Authro : GuoQiang Yao
// Date : 2021-11-12

/**************************************************************************************
给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。
在构造过程中，请注意区分大小写。比如 “Aa” 不能当做一个回文字符串。

注意:
假设字符串的长度不会超过 1010。

示例 1:

输入:
“abccccdd”

输出:
7

解释:
我们可以构造的最长的回文串是"dccaccd", 它的长度是 7。

**************************************************************************************/

/*******************************************************************************************************
题目分析： 本题需要利用hash表统计每个单词出现的频率，频率为偶数的一定可以构成回文数，
偶数个频率为奇数的可以当作偶数次数看待，因此还需要统计奇数个频率词的出现次数，
若不全为偶数的话用原字符的长度减去奇数频率的个数加上1即为可以构成的最大回文串。
********************************************************************************************************/
class Solution {
public:
    int longestPalindrome(string s) {
        //将每个字符出现的频率记录下来
        unordered_map<char, int> a;
        //记录奇数的个数
        int count = 0;
        for(char ch : s)
        {
            a[ch]++;
        }
        for(auto num : a)
        {
            //查看奇数元素的个数
            if(num.second % 2 == 1)
                ++count;
        }
        //如果所有元素出现次数都是偶数次，直接返回原字符串长度
        if(count == 0)
            return s.size();
        else
            return s.size() - count + 1;
    }
};

