// Source :https://leetcode.cn/problems/rotate-array/
// Author : GuoQiang Yao
// Date : 2022-11-11
/**************************************************************************************
给你一个数组，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。

示例 1:

输入: nums = [1,2,3,4,5,6,7], k = 3
输出: [5,6,7,1,2,3,4]
解释:
向右轮转 1 步: [7,1,2,3,4,5,6]
向右轮转 2 步: [6,7,1,2,3,4,5]
向右轮转 3 步: [5,6,7,1,2,3,4]
示例 2:

输入：nums = [-1,-100,3,99], k = 2
输出：[3,99,-1,-100]
解释:
向右轮转 1 步: [99,-1,-100,3]
向右轮转 2 步: [3,99,-1,-100]

提示：

1 <= nums.length <= 10^5
-2^31 <= nums[i] <= 2^31 - 1
0 <= k <= 10^5
**************************************************************************************/

/*******************************************************************************************************
题目分析：循环移位，使用最基本的三次反转即可，需要注意的是循环移位的长度可能比较大， 因此需要进行取余操作。
********************************************************************************************************/

class Solution {
public:
    void reverse(vector<int> &nums, int start, int end)
    {
        while(start < end)
        {
            swap(nums[start], nums[end]);
            ++start;
            --end;
        }
    }
    void rotate(vector<int>& nums, int k) {
        // 移位的长度可能超出数组本身长度，因此需要取余操作
        k %= nums.size();
        reverse(nums, 0, nums.size() - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, nums.size() - 1);
    }
};
