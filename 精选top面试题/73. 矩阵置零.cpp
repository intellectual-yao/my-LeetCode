// Source : https://leetcode.cn/problems/set-matrix-zeroes/
// Author : GuoQiang Yao
// Date : 2022-7-16
/**************************************************************************************　　
给定一个 m x n 的矩阵，如果一个元素为 0 ，则将其所在行和列的所有元素都设为 0 。请使用 原地 算法。

示例 1：


输入：matrix = [[1,1,1],[1,0,1],[1,1,1]]
输出：[[1,0,1],[0,0,0],[1,0,1]]
示例 2：


输入：matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
输出：[[0,0,0,0],[0,4,5,0],[0,3,1,0]]

提示：

m == matrix.length
n == matrix[0].length
1 <= m, n <= 200
-231 <= matrix[i][j] <= 231 - 1

进阶：

一个直观的解决方案是使用 O(mn) 的额外空间，但这并不是一个好的解决方案。
一个简单的改进方案是使用 O(m + n) 的额外空间，但这仍然不是最好的解决方案。
你能想出一个仅使用常量空间的解决方案吗？

**************************************************************************************/

/*******************************************************************************************************
题目分析： 首先遍历整个二维数组，当其中一共元素为0时就将其对应的行与列的标记都置为true，
然后第二次遍历整个二维数组，对于标记为true的位置上的元素值都置为0即可。
********************************************************************************************************/

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        // 行列数
        int m = matrix.size();
        int n = matrix[0].size();
        // 这里的row,col必须初始化
        vector<int> row(m), col(n);
        for(int i = 0;i < m;++i)
        {
            for(int j = 0;j < n;++j)
            {
                if(matrix[i][j] == 0)
                {
                    row[i] = col[j] = true;
                }
            }
        }
        for(int i = 0;i < m;++i)
        {
            for(int j = 0;j < n;++j)
            {
                if(col[j] || row[i])
                {
                    matrix[i][j] = 0;
                }
            }
        }
    }
}; 
