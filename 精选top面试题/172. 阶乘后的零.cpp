// Source : https://leetcode.cn/problems/factorial-trailing-zeroes/
// Author : GuoQiang Yao
// Date : 2022-11-10
/**************************************************************************************
给定一个整数 n ，返回 n! 结果中尾随零的数量。

提示 n! = n * (n - 1) * (n - 2) * … * 3 * 2 * 1

示例 1：

输入：n = 3
输出：0
解释：3! = 6 ，不含尾随 0
示例 2：

输入：n = 5
输出：1
解释：5! = 120 ，有一个尾随 0
示例 3：

输入：n = 0
输出：0

提示：

0 <= n <= 10^4
**************************************************************************************/

/*******************************************************************************************************
题目分析 : 本题主要从数学的角度进行分析，尾随0只可能通过10的相乘产生，而10的产生只能通过2 * 5得到，
因此每有一对2 * 5，就可以产生一个尾随0，所以尾随0的个数取决于数字2和5出现次数的最小值，直观上看，
5出现的次数一定小于2出现的次数，因此要讨论数据中出现5的次数。当n = 5的时候可以产生一个尾随0，5！ = 5 * 4 * 3 * 2 * 1，
其中4，2都可以产生2，但是5只有5可以产生一个，因此结果中会存在一个尾随0。当n = 25的时候，其中的25，20，15，10，5，
都会产生5，但是注意到25本身就是5 * 5，即会多产生一个，因此需要多加上一个，所以当n >= 25的时候需要进行多加一个的操作，
当n = 125的时候同理。
********************************************************************************************************/

class Solution {
public:
    int trailingZeroes(int n) {
        int cnt = 0;
        while(n >= 5)
        {
            cnt += n / 5;
            n /= 5;
        }
        return cnt;
    }
}; 
