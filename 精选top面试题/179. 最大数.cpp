// Source :https://leetcode.cn/problems/largest-number/
// Author : GuoQiang Yao
// Date : 2022-11-11
/**************************************************************************************
给定一组非负整数 nums，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。

注意：输出结果可能非常大，所以你需要返回一个字符串而不是整数。

示例 1：

输入：nums = [10,2]
输出：“210”
示例 2：

输入：nums = [3,30,34,5,9]
输出：“9534330”

提示：

1 <= nums.length <= 100
0 <= nums[i] <= 10^9
**************************************************************************************/

/*******************************************************************************************************
题目分析：首先将每个元素转为字符串，然后放入字符串数组，之后通过扩展的字符串排序，将元素从大到小排序，最后将排序之后的结果拼接起来就好。
********************************************************************************************************/

class Solution {
public:
    string largestNumber(vector<int>& nums) {
        vector<string> int2string;
        string res;
        // 数组中的每个元素先转为字符串然后进行排序
        for(int i : nums)
            int2string.push_back(to_string(i));
        // 扩展排序  //从大到小排序字符串数组
        sort(int2string.begin(), int2string.end(), [](string &a, string &b)
        {
            return a + b > b + a;
        });
        // 如果出现前导0，那么总数就是0
        if(int2string[0] == "0")
            return "0";
        // 排序好的字符串进行拼接
        for(string s : int2string)
            res += s;
        return res;
    }
}; 
