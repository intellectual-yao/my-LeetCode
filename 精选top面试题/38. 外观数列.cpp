 // Source : https://leetcode.cn/problems/count-and-say/
 // Author : GuoQiang Yao
// Date : 2022-6-14
/**************************************************************************************
给定一个正整数 n ，输出外观数列的第 n 项。

「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。

你可以将其视作是由递归公式定义的数字字符串序列：

countAndSay(1) = “1”
countAndSay(n) 是对 countAndSay(n-1) 的描述，然后转换成另一个数字字符串。
前五项如下：

1
1
11
1
21
1
1211
1
111221
1
第一项是数字 1
描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 “11”
描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 “21”
描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 “1211”
描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 “111221”
要 描述 一个数字字符串，首先要将字符串分割为 最小 数量的组，每个组都由连续的最多 
相同字符 组成。然后对于每个组，先描述字符的数量，然后描述字符，形成一个描述组。
要将描述转换为数字字符串，先将每组中的字符数量用数字替换，再将所有描述组连接起来。

例如，数字字符串 “3322251” 的描述如下图：



示例 1：

输入：n = 1
输出：“1”
解释：这是一个基本样例。
示例 2：

输入：n = 4
输出：“1211”
解释：
countAndSay(1) = “1”
countAndSay(2) = 读 “1” = 一 个 1 = “11”
countAndSay(3) = 读 “11” = 二 个 1 = “21”
countAndSay(4) = 读 “21” = 一 个 2 + 一 个 1 = “12” + “11” = “1211”

提示：

1 <= n <= 30

**************************************************************************************/

/*******************************************************************************************************
题目分析：从最开始一个字符往下算，然后每次都计算下一次的字符串。
********************************************************************************************************/

class Solution {
public:
    string countAndSay(int n) {
        string s = "1", res = "1";
        // 从i等于2开始循环，因为i等于1的情况已经有了
        // 外层循环每次找到本序号对应的字符串
        for(int i = 2;i <= n;++i)
        {
            res = "";
            for(int j = 0;j < s.size(); )
            {
                // k记录相临且相同的元素出现的次数
                int k = j;
                // 找出相邻并且相同的字符
                while(k < s.size() && s[j] == s[k])
                    ++k;
                // “几个几”
                res += to_string(k - j) + s[j];
                // j移动到k的位置(后移到下一个不同字符出现的字符)
                j = k;
            }
            // 给s赋值，然后再次进入循环
            s = res;
        }
        return res;
    }
};  
